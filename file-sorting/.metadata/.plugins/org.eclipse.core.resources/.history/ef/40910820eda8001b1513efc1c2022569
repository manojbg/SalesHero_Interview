package com.saleshero.application.service;

import static org.junit.Assert.assertTrue;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;

import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.mockito.Mock;
import org.mockito.Mockito;

import com.saleshero.service.WriteFileService;

public class TestWriteFileService {
	@Mock
    private WriteFileService writeFileService;

    @Mock
    private BufferedReader reader;

    @Mock
    private File file;
    
    @Rule
    public ExpectedException exception = ExpectedException.none(); 
    
    @Test
    public void testReadingAFile() throws FileNotFoundException
    {
    	String fileName = "files/output.txt";
    	file = new File(fileName);
    	List<Integer> expList = new ArrayList<Integer>();
    	expList.add(12);
    	expList.add(2324);
    	expList.add(23432);
    	expList.add(1);
    	expList.add(353454);
    	expList.add(-12321);
    	expList.add(0);
        Mockito.when(writeFileService.writeRecordsToFile(values)).thenReturn(expList);
        writeFileService.writeRecordsToFile(values);
        assertTrue(expList.size() == values.size() && expList.containsAll(values) && values.containsAll(expList));
    }
    
   @Test
    public void testNumberCountWhileRead() throws FileNotFoundException
    {
		String fileName = "files/Input.txt";
    	file = new File(fileName);
    	List<Integer> expList = new ArrayList<Integer>();
    	expList.add(12);
    	expList.add(2324);
    	expList.add(23432);
    	expList.add(1);
    	expList.add(353454);
    	expList.add(-12321);
    	expList.add(0);
        Mockito.when(writeFileService.writeRecordsToFile(values)).thenReturn(expList);
        writeFileService.writeRecordsToFile(values);
        assertTrue(expList.size() == values.size());
    }
}
